name: CI/CD - Ansible ServiceNow Automation

on:
  push:
    branches: [ "master" ]
  pull_request:

env:
  SN_INSTANCE: ${{ secrets.SN_INSTANCE }}
  SN_USERNAME: ${{ secrets.SN_USERNAME }}
  SN_PASSWORD: ${{ secrets.SN_PASSWORD }}
  EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
  EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
  EMAIL_USER: ${{ secrets.EMAIL_USER }}
  EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
  EMAIL_RECEIVER: ${{ secrets.EMAIL_RECEIVER }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r AnsibleServicenow/automation_Project/requirements.txt
        pip install flake8 ansible ansible-lint

    - name: Run flake8
      run: flake8 AnsibleServicenow/automation_Project/scripts/ --max-line-length=120

    - name: Run ansible-lint
      run: ansible-lint AnsibleServicenow/automation_Project/ansible/playbooks/incident_remediation.yml

    - name: Run Python unit tests
      run: python -m unittest discover AnsibleServicenow/automation_Project/tests/

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python + Ansible
      run: |
        sudo apt update && sudo apt install -y ansible
        pip install -r AnsibleServicenow/automation_Project/requirements.txt

    - name: Inject Environment Variables
      run: |
        echo "SN_INSTANCE=${{ secrets.SN_INSTANCE }}" >> $GITHUB_ENV
        echo "SN_USERNAME=${{ secrets.SN_USERNAME }}" >> $GITHUB_ENV
        echo "SN_PASSWORD=${{ secrets.SN_PASSWORD }}" >> $GITHUB_ENV
        echo "EMAIL_HOST=${{ secrets.EMAIL_HOST }}" >> $GITHUB_ENV
        echo "EMAIL_PORT=${{ secrets.EMAIL_PORT }}" >> $GITHUB_ENV
        echo "EMAIL_USER=${{ secrets.EMAIL_USER }}" >> $GITHUB_ENV
        echo "EMAIL_PASS=${{ secrets.EMAIL_PASS }}" >> $GITHUB_ENV
        echo "EMAIL_RECEIVER=${{ secrets.EMAIL_RECEIVER }}" >> $GITHUB_ENV

    - name: Run Ansible - Incident Creation
      run: |
        ansible-playbook AnsibleServicenow/automation_Project/ansible/playbooks/incident_remediation.yml

    - name: Run Ansible - Auto-close resolved incidents
      run: |
        ansible-playbook AnsibleServicenow/automation_Project/ansible/playbooks/auto_close_resolved.yml
