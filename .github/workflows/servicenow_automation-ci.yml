name: ServiceNow Incident CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  SN_INSTANCE: ${{ secrets.SN_INSTANCE }}
  SN_USERNAME: ${{ secrets.SN_USERNAME }}
  SN_PASSWORD: ${{ secrets.SN_PASSWORD }}

jobs:
  lint-python:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Lint scripts
        run: flake8 AnsibleServicenow/automation_Project/scripts/ --max-line-length=120

  test-python:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          pip install -r AnsibleServicenow/requirements.txt

      - name: Run tests
        run: |
          python -m unittest AnsibleServicenow/automation_Project/tests/test_servicenow_api.py

  ansible-syntax-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Ansible
        run: pip install ansible ansible-lint

      - name: Lint playbook
        run: |
          ansible-lint AnsibleServicenow/automation_Project/ansible/playbooks/incident_remediation.yml

      - name: Syntax check
        run: |
          ansible-playbook AnsibleServicenow/automation_Project/ansible/playbooks/incident_remediation.yml --syntax-check

  deploy-playbook:
    runs-on: ubuntu-latest
    needs: [lint-python, test-python, ansible-syntax-check]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Ansible
        run: pip install ansible

      - name: Run playbook (create ServiceNow incident)
        env:
          SNOW_USER: ${{ secrets.SN_USERNAME }}
          SNOW_PASSWORD: ${{ secrets.SN_PASSWORD }}
        run: |
          ansible-playbook AnsibleServicenow/automation_Project/ansible/playbooks/incident_remediation.yml
