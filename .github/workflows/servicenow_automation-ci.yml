name: ServiceNow Automation - CI/CD

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

env:
  SN_INSTANCE: ${{ secrets.SN_INSTANCE }}
  SN_USERNAME: ${{ secrets.SN_USERNAME }}
  SN_PASSWORD: ${{ secrets.SN_PASSWORD }}
  EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
  EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
  EMAIL_USER: ${{ secrets.EMAIL_USER }}
  EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
  EMAIL_RECEIVER: ${{ secrets.EMAIL_RECEIVER }}

jobs:
  lint-python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install flake8
        run: pip install flake8
      - name: Run flake8
        run: flake8 AnsibleServicenow/automation_Project/scripts/ --max-line-length=120

  test-python:
    runs-on: ubuntu-latest
    needs: lint-python
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: pip install -r AnsibleServicenow/requirements.txt
      - name: Run tests
        run: python -m unittest discover AnsibleServicenow/automation_Project/tests

  ansible-syntax-check:
    runs-on: ubuntu-latest
    needs: test-python
    steps:
      - uses: actions/checkout@v3
      - name: Install Ansible & Linter
        run: |
          pip install ansible ansible-lint
      - name: Run ansible-lint
        run: ansible-lint AnsibleServicenow/automation_Project/ansible/playbooks/incident_remediation.yml

  deploy-playbook:
    runs-on: ubuntu-latest
    needs: ansible-syntax-check
    steps:
      - uses: actions/checkout@v3
      - name: Install Ansible
        run: pip install ansible
      - name: Run playbooks
        run: |
          ansible-playbook AnsibleServicenow/automation_Project/ansible/playbooks/incident_remediation.yml
          ansible-playbook AnsibleServicenow/automation_Project/ansible/playbooks/auto_close_resolved.yml
